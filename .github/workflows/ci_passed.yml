name: Auto Version Bump

on:
  workflow_run:
    workflows: ["./ci.yml"]
    types:
      - completed
    branches: [ main ]

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Determine version bump type
      id: version_type
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          COMMITS=$(git log --pretty=format:"%s" --no-merges)
        else
          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"%s" --no-merges)
        fi
        
        echo "Commits to analyze:"
        echo "$COMMITS"
        
        # Check for breaking changes (major version)
        if echo "$COMMITS" | grep -qE "^[^:]+!:|BREAKING CHANGE:"; then
          echo "VERSION_TYPE=major" >> $GITHUB_OUTPUT
          echo "Detected breaking changes - major version bump"
        # Check for features (minor version)
        elif echo "$COMMITS" | grep -qE "^feat(\(.+\))?:"; then
          echo "VERSION_TYPE=minor" >> $GITHUB_OUTPUT
          echo "Detected new features - minor version bump"
        # Check for fixes, docs, style, refactor, perf, test, chore (patch version)
        elif echo "$COMMITS" | grep -qE "^(fix|docs|style|refactor|perf|test|chore)(\(.+\))?:"; then
          echo "VERSION_TYPE=patch" >> $GITHUB_OUTPUT
          echo "Detected fixes/improvements - patch version bump"
        else
          echo "VERSION_TYPE=none" >> $GITHUB_OUTPUT
          echo "No conventional commits found - no version bump"
        fi
    
    - name: Bump version
      if: steps.version_type.outputs.VERSION_TYPE != 'none'
      run: |
        npm version ${{ steps.version_type.outputs.VERSION_TYPE }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
    
    - name: Commit version bump
      if: steps.version_type.outputs.VERSION_TYPE != 'none'
      run: |
        git add package.json
        git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
        git tag "v${{ env.NEW_VERSION }}"
    
    - name: Push changes
      if: steps.version_type.outputs.VERSION_TYPE != 'none'
      run: |
        git push origin main
        git push origin "v${{ env.NEW_VERSION }}"
    
    - name: Create Release
      if: steps.version_type.outputs.VERSION_TYPE != 'none'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "v${{ env.NEW_VERSION }}"
        name: "Release v${{ env.NEW_VERSION }}"
        draft: false
        prerelease: false
        generate_release_notes: true
