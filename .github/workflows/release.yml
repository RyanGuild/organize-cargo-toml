name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build extension
      run: npm run build
    
    - name: Package extension
      run: npm run package
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Changes in ${{ steps.get_version.outputs.VERSION }}
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
    
    - name: Upload VSIX to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./organize-cargo-toml-${{ steps.get_version.outputs.VERSION }}.vsix
        asset_name: organize-cargo-toml-${{ steps.get_version.outputs.VERSION }}.vsix
        asset_content_type: application/zip
    
    - name: Publish to VS Code Marketplace
      if: ${{ !contains(github.ref, 'beta') && !contains(github.ref, 'alpha') }}
      run: npx @vscode/vsce publish --pat ${{ secrets.VSCE_PAT }}
    
    - name: Publish to Open VSX Registry
      if: ${{ !contains(github.ref, 'beta') && !contains(github.ref, 'alpha') }}
      run: npx ovsx publish --pat ${{ secrets.OVSX_PAT }}
      continue-on-error: true
